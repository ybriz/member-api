openapi: "3.0.2"
info:
  description: "This is an api to manage members"
  version: "1.0.0"
  title: "Swagger Members"
  
paths:
  /member:
    post:
      summary: "Add a new member"
      description: ""
      operationId: "addMember"
      requestBody:
        description: "Member object that needs to be added to the database"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/Member"
      responses:
        '201':
          description: "successful operation"
          content:
            application/json:
              schema:
                type: "string"
                maxLength: 32
                minLength: 32
        '400':
          description: "Invalid input"
    get:
      summary: "List Members"
      description: "List of members"
      operationId: "listMembers"
      responses:
        '200':
          description: "successful operation"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/definitions/Member"
  /member/{memberId}:
    get:
      summary: "Find member by ID"
      operationId: "getMemberById"
      parameters:
        - name: "memberId"
          in: "path"
          description: "ID of member to return"
          required: true
          schema:
            type: "string"
            maxLength: 32
            minLength: 32
      responses:
        '200':
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/definitions/Member"
        '204':
          description: "Member not found"
    put:
      summary: "Updates a member in the database"
      operationId: "updateMember"
      parameters:
        - name: "memberId"
          in: "path"
          description: "ID of member that needs to be updated"
          required: true
          schema:
            type: "string"
            maxLength: 32
            minLength: 32
      requestBody:
        description: "Member object that will be updated"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/Member"
      responses:
        '200':
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/definitions/Member"
    delete:
      summary: "Deletes a member"
      operationId: "deleteMember"
      parameters:
        - name: "memberId"
          in: "path"
          description: "Member id to delete"
          required: true
          schema:
            type: "string"
            maxLength: 32
            minLength: 32
      responses:
        '200':
          description: "successful operation"
          content:
            application/json:
              schema:
                type: "string"
                maxLength: 32
                minLength: 32
        '204':
          description: "Member not found"

definitions:
  Member:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: object
        properties:
          name:
            type: string
          value:
            type: string
      gender:
        type: string
        format: string
      name:
        type: object
        properties:
          title:
            type: string
          first:
            type: string
          last:
            type: string
      location:
        type: object
        properties:
          street:
            type: string
          city:
            type: string
          state:
            type: string
          postcode:
            type: string
          coordinates:
            type: object
            properties:
              offset:
                type: number
              description:
                type: string
          timezone:
            type: object
            properties:
              latitude:
                type: number
              longitude:
                type: number
      email:
        type: string
      login:
        type: object
        properties:
          uuid:
            type: string
          username:
            type: string
          password:
            type: string
          salt:
            type: string
          md5:
            type: string
          sha1:
            type: string
          sha256:
            type: string
      dob:
        type: object
        properties:
          date:
            type: string
          age:
            type: number
      registered:
        type: object
        properties:
          date:
            type: string
          age:
            type: number
      phone:
        type: string
      cell:
        type: string
      picture:
        type: object
        properties:
          large:
            type: string
          medium:
            type: string
          thumbnail:
            type: string
      nat:
        type: string
